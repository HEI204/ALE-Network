{"version":3,"file":"static/js/819.a6709a5a.chunk.js","mappings":"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","sources":["components/Alert.js","components/LoginForm.js","components/RegisterForm.js","pages/AuthPage.js"],"sourcesContent":["import React from \"react\";\n\nfunction Alert({ alertType, message }) {\n  return (\n    <div\n      className={`alert alert-${alertType} alert-dismissible fade show mb-4`}\n      role=\"alert\"\n    >\n      {message}\n      <button\n        type=\"button\"\n        className=\"btn-close\"\n        data-bs-dismiss=\"alert\"\n        aria-label=\"Close\"\n      ></button>\n    </div>\n  );\n}\n\nexport default Alert;\n","import React, { useState, useContext } from \"react\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport Alert from \"./Alert\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.username) {\r\n    errors.username = \"Required\";\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = \"Required\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const { handleLogin } = useContext(AuthContext);\r\n  const [SuccessfulLogin, setSuccessfulLogin] = useState(true);\r\n\r\n  async function submitLoginForm(username, password) {\r\n    let response = await handleLogin(username, password);\r\n\r\n    if (response === false) setSuccessfulLogin(false);\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => submitLoginForm(values.username, values.password),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {!SuccessfulLogin && (\r\n        <Alert\r\n          alertType=\"danger\"\r\n          message=\"Incorrect username and/or password. Please try again.\"\r\n        />\r\n      )}\r\n\r\n      <form\r\n        className=\"my-3\"\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          formik.handleSubmit();\r\n        }}\r\n      >\r\n        <div className=\"form-group form-floating mb-4\">\r\n          <input\r\n            autoFocus\r\n            className={\r\n              \"form-control shadow-none\" +\r\n              (formik.touched.username && formik.errors.username\r\n                ? \" error\"\r\n                : \"\")\r\n            }\r\n            id=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            value={formik.values.username}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          <label\r\n            htmlFor=\"username\"\r\n            className={\r\n              formik.touched.username && formik.errors.username\r\n                ? \"label-error\"\r\n                : \"\"\r\n            }\r\n          >\r\n            Username\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"form-group form-floating mb-4\">\r\n          <input\r\n            className={\r\n              \"form-control shadow-none\" +\r\n              (formik.touched.password && formik.errors.password\r\n                ? \" error\"\r\n                : \"\")\r\n            }\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          <label\r\n            htmlFor=\"password\"\r\n            className={\r\n              formik.touched.password && formik.errors.password\r\n                ? \"label-error\"\r\n                : \"\"\r\n            }\r\n          >\r\n            Password\r\n          </label>\r\n        </div>\r\n\r\n        <input\r\n          className=\"btn btn-skyblue shadow-none w-100 mt-3\"\r\n          type=\"submit\"\r\n          value=\"Login\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\n\nimport Alert from \"./Alert\";\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length < 3 || values.username.length > 25) {\n    errors.username = \"Username must be between 3 and 25 characters\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length <= 7) {\n    errors.password = \"Password must be has at least 8 character\";\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n  } else if (values.confirmPassword !== values.password) {\n    errors.confirmPassword = \"Must be same as the password\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nconst RegiserForm = () => {\n  const navigate = useNavigate();\n  const [SuccessfulRegister, setSuccessfulRegister] = useState(true);\n\n  async function handleRegister(username, email, password) {\n    let response = await fetch(\"http://127.0.0.1:8000/api/register\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        username,\n        email,\n        password,\n      }),\n    });\n\n    if (!response.ok) setSuccessfulRegister(false);\n    else navigate(\"/login\");\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n    validate,\n    onSubmit: (values) =>\n      handleRegister(values.username, values.email, values.password),\n  });\n\n  return (\n    <>\n      {!SuccessfulRegister && (\n        <Alert alertType=\"danger\" message=\"Username has been taken by other.\" />\n      )}\n\n      <form\n        className=\"my-3\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          formik.handleSubmit();\n        }}\n      >\n        <div className=\"form-group form-floating mb-4\">\n          <input\n            autoFocus\n            className={\n              \"form-control shadow-none\" +\n              (formik.touched.username && formik.errors.username\n                ? \" error\"\n                : \"\")\n            }\n            id=\"username\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Username\"\n            value={formik.values.username}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          <label\n            htmlFor=\"username\"\n            className={\n              formik.touched.username && formik.errors.username\n                ? \"label-error\"\n                : \"\"\n            }\n          >\n            Username\n          </label>\n          {formik.touched.username && formik.errors.username ? (\n            <div className=\"error-message\">{formik.errors.username}</div>\n          ) : null}\n        </div>\n\n        <div className=\"form-group form-floating mb-4\">\n          <input\n            className={\n              \"form-control shadow-none\" +\n              (formik.touched.email && formik.errors.email ? \" error\" : \"\")\n            }\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          <label\n            htmlFor=\"email\"\n            className={\n              formik.touched.email && formik.errors.email ? \"label-error\" : \"\"\n            }\n          >\n            Email\n          </label>\n          {formik.touched.email && formik.errors.email ? (\n            <div className=\"error-message\">{formik.errors.email}</div>\n          ) : null}\n        </div>\n\n        <div className=\"form-group form-floating mb-4\">\n          <input\n            className={\n              \"form-control shadow-none\" +\n              (formik.touched.password && formik.errors.password\n                ? \" error\"\n                : \"\")\n            }\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          <label\n            htmlFor=\"password\"\n            className={\n              formik.touched.password && formik.errors.password\n                ? \"label-error\"\n                : \"\"\n            }\n          >\n            Password\n          </label>\n          {formik.touched.password && formik.errors.password ? (\n            <div className=\"error-message\">{formik.errors.password}</div>\n          ) : null}\n        </div>\n\n        <div className=\"form-group form-floating mb-5\">\n          <input\n            className={\n              \"form-control shadow-none\" +\n              (formik.touched.confirmPassword && formik.errors.confirmPassword\n                ? \" error\"\n                : \"\")\n            }\n            id=\"confirmPassword\"\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm Password\"\n            value={formik.values.confirmPassword}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          <label\n            htmlFor=\"confirmPassword\"\n            className={\n              formik.touched.confirmPassword && formik.errors.confirmPassword\n                ? \"label-error\"\n                : \"\"\n            }\n          >\n            Confirm Password\n          </label>\n          {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n            <div className=\"error-message\">{formik.errors.confirmPassword}</div>\n          ) : null}\n        </div>\n\n        <input\n          className=\"btn btn-skyblue shadow-none w-100 mt-3\"\n          type=\"submit\"\n          value=\"Register\"\n        />\n      </form>\n    </>\n  );\n};\n\nexport default RegiserForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport LoginForm from \"../components/LoginForm\";\nimport RegisterForm from \"../components/RegisterForm\";\nimport \"../AuthPage.css\";\n\nfunction AuthPage({ authMode }) {\n  let description, targetLink, linkText;\n  if (authMode === \"register\") {\n    description = \"Create your ALE-Network Account to enjoy the service.\";\n    targetLink = \"/login\";\n    linkText = \"Already have an account?\";\n  } else {\n    description = \"Enter your ALE-Network Account details.\";\n    targetLink = \"/register\";\n    linkText = \"Don't have an account?\";\n  }\n\n  return (\n    <div className=\"auth-form container\">\n      <div className=\"row mt-3 justify-content-center align-items-center\">\n        <div className=\"col-md-10 col-lg-6\">\n          <div className=\"card border-0\">\n            <div className=\"card-body\">\n              <div className=\"mb-4\">\n                <h2 className=\"fw-bold\">\n                  {authMode[0].toUpperCase() + authMode.slice(1)}\n                </h2>\n                <p className=\"text-muted\">{description}</p>\n              </div>\n\n              {authMode === \"login\" ? <LoginForm /> : <RegisterForm />}\n\n              <div className=\"card-footer bg-white border-0 text-center\">\n                <Link to={targetLink}>{linkText}</Link>\n                <Link to=\"/\">Back to homepage</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AuthPage;\n"],"names":["alertType","message","className","role","type","validate","values","errors","username","password","handleLogin","useContext","AuthContext","useState","SuccessfulLogin","setSuccessfulLogin","formik","useFormik","initialValues","onSubmit","submitLoginForm","event","preventDefault","handleSubmit","autoFocus","touched","id","name","placeholder","value","onChange","handleChange","onBlur","handleBlur","htmlFor","length","confirmPassword","email","test","navigate","useNavigate","SuccessfulRegister","setSuccessfulRegister","fetch","method","headers","body","JSON","stringify","ok","handleRegister","description","targetLink","linkText","authMode","toUpperCase","slice","RegisterForm","to"],"sourceRoot":""}